***************************LINQ*****************************
LINQ - Language Integrated Query - It helps us to query on different types of datasource without knowing syntax of the particaulr datasource.

var - dt
-----------------------------------
Get Char lenth in Row -> dt.AsEnumerable().Where(Function (row) row.Field(Of String)("Names").Length = 4)
-----------------------------------
Copy To Datatable:    -> dt.AsEnumerable().Where(Function(row) row("Names").Equals("Zayn")).CopyToDataTable
-----------------------------------
Filter:               -> dt.AsEnumerable().Where(Function(row) row("Names").Equals("Zayn") and 	row("License Plate").Equals("VV64350")).CopyToDataTable
                      -> dt.AsEnumerable().Where(Function(row) row.Field(Of String)("Names").Length = 4  and row("License Plate").Equals("VV64350")).CopyToDataTable
-----------------------------------


Basic Filter                    -> dt1.AsEnumerable.Where(Function(x) Cint(x("Model").ToString)>50 AND x("Car").ToString.Equals("BMW")).CopyToDataTable
Get Match Value From two DT     -> dt1.AsEnumerable.Where(Function(row) dt2.AsEnumerable.Any(Function(x)x("CarName").ToString=row("Car").ToString)).CopyToDataTable
Get Not Match Value From two DT -> dt1.AsEnumerable.Where(Function(row) dt2.AsEnumerable.Any(Function(x)x("CarName").ToString=row("Car").ToString)).CopyToDataTable
Select Funnction                -> dt1.AsEnumerable.Where(Function(row) Cint(row("Model").ToString)>50).Select(Function(x)x("Model").ToString).ToArray
GroupBy                         -> for item in dt1.AsEnumerable.GroupBy(Function(row) row("Employee Name").ToString)
									item.key    item.Count.ToString
GroupBy Multiple Column         -> (From row In dt
									Group row By a = row("Car").ToString.trim,b = row("License Plate").ToString.trim Into grp=Group
									Select grp.First).CopyToDataTable

Sumup row of Slected Column     ->  (From x In dtGroupBy
									Group x By  a =  x("Item Description").ToString.trim ,b= x("Quantity").Tostring Into grp = Group
									Select dtGroupBy.Rows.Add({a,b,grp.sum(Function(k) CInt(k("Price").Tostring))})).CopyToDataTable

Object Reference Errot          -> (From x In dtGroupBy
									Group x By   a = x("Item Description").ToString.trim, b= x("Quantity").ToString.trim Into grp = Group
									Select dtSumTable.Rows.Add(a,b,grp.Sum(Function(x) 

Update Query                    ->  (From row In dtMonthlyTable
									Let x = New Object(){row("Item Description"),row("Quantity"),CInt(row("Price").Tostring)*2}
									Select dtOutputTable.Rows.Add(x)).copytoDataTable

Update Query with If:           ->
									(From row In dtMonthlyTable
									Let a = row("Item Description").Tostring 
									Let b = row("Quantity").ToString
									Let c =row("Price").Tostring
									Let x = New Object(){a, b, If(a.Contains("Rice"), (CInt(c)*2).ToString , c)}
									Select dtOutputTable.Rows.Add(x)).copytodatatable
Adding the new Column and update-> (From row In dtMonthlyTable
									Let a = row("Item Description").Tostring 
									Let b = row("Quantity").ToString
									Let c =row("Price").Tostring
									Let x = New Object(){a, b, If(a.Contains("Rice"), (CInt(c)*2).ToString , c), String.Concat(a,"has a quantity of " ,b,"with price as ",c) }
									Select dtOutputTable.Rows.Add(x)).copytodatatable									


Join two data table             ->  (From a In dtStudents.AsEnumerable Join b In dtIDTable.AsEnumerable On a("Class").ToString Equals b("Class").tostring
									Let ID = New Object(){a("Student Name"),a("Class"),a("Section"), String.Concat("HYD",a("Class"),a("Section"),b("ID"))}
									Select dtFinalTable.Rows.Add(ID)).copytodatatable
-----------------------------------






















