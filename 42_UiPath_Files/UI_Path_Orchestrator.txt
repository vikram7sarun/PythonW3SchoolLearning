*****************
UI Path Orchestrator:

Main Capabilities of Orchestrator:
Configuration - Orchestrator maintains and delivers Robust environments and processes configuration.
Provisioning - Creating and maintaining the connection between Robots and web application is also a capability of orchestrator.
Monitoring - It also keeps track of Robot identification data and maintains user permissions.
Queues - One important feature of orchestrator is to ensure the queues and queue items management.
Logging - Stores and indexes the logs to an SQL database and/or Elasticsearch.
Inter-connectivity - Orchestrator acts as the centralized point of communication for 3rd party solutions or applications
Deployment - It assures the correct delivery of the package versions to the assigned Robots for execution
--------------------------------
Standard Robot - Works with only one machine
Floating Robot - Works with any machine,standard,templete etc.
----------------------------------
Type of Asset:
 4 -> Interger,Boolean,String,Credential(256 encrypted  256 bit AES(Assync)encryption Schema)
 2 -> Global asset and Asset value to each robot.
-----------------------------------
Upload Data into Queue:
1) addQueueItem
2) BulkAddQueueItem
3. addTransactionItem
Before adding queue item we need to manually create Queue item or using API we can create Queue item and add data to it.
--------------------------------------
addQueueItem    - Used to upload data into queue
getQueueItems   - Get all the data from queue based on state
getTransaction  - Get single transation.
---------------------------------------
Different type of trigger: - Trigger Enable you to execute the jobs in preplanned manner. 

Time Based Schedular  - Scheduled based on perodic time and date also with Cron expression(For Complex data).
                         CRON - Scheduling Within Orchestrator uses the Quartz.Net Framework.
						  Seconds-Minute-Hours-DaysOfTheMonth-Month-DaysOfTheWeek-Year
						   0 0 0,11 15,22,29 OCT,NOV,DEC ? *
Queue Based Schedular - Whenever the item is added to the queue the job will be executed.
---------------------------------------
Different State In Queue-
New        - When new Item is just added to the queue
Inprogress - When the item get processed in getTransaction item but state in not changed
Failed     - When Business or application Exception occurs
Success    - Successfully processed with get Transaction item and set Transaction status
Abdandant  - When the Item is being in Progress more then 24 hours with any proces status change
retry      - When Item is failed and you have set properties to retry more then 1 time
delete     - Manually Selected and deleted and item no longer being processed.
----------------------------------------
Credential Store:
Orchestrator asset , Windows Credentials(Only for specific machine)and 3rd party Credential store

3rd party Credential store:
- AzureKeyVault
- BeyondTrustpasswordSafe
- CyberArc
- Database
- HasiCorp vault
- Thycotic Secret Server
---------------------------------------
Studio activitity linked with Stop Command:
Stop and Kill   - Should stop
-----------------------------------------
Which type can be floating robot:
Attended and Developmet robot
------------------------------------
Machine Template: - Multiple user to connect UI path robot to orchestrator using same machine key. Machine template should be created for this.
We can use machine key to connect any type of UI path robot.
-------------------------------------------
Permission - Tentant and Folder.
Roles      - Tenant , Folder and Mixed.
--------------------------------------------
Storage buckets can be configured using any of the following providers:
* Orchestrator
* Azure Storage (WASB)
* Amazon S3
* MinIO
* S3 Compatible storage solutions
* FileSystem
--------------------------------------------
Audit in Orchestrator:
  * The Audit Page displayes trail and action performed by Orchestrator Users or Entity 
--------------------------------------------
Two Types of Folder:
 1) Classic Folder -
 2) Modern  Folder - 
--------------------------------------------
Floating Robots:
One User -> may login to different machines daily in his workplace depending on the availability >> hence the machine name changes.
How his robot need to configure in orchestrator:
Ans: Such case we need to use Machine template and Floating Robot.

When Creating Floatig Robot Type should be Attended that is a condition.
Once it is created the robot will connect automation when we open.
----------------------------------------------
Deploy Project using Floating Robot:

----------------------------------------------
Why Orchestrator is needed and importance ?
- We can add machines
- Remote control robots
- Schedule job to perform specific processed
- Can upload and manage package
- We can manage Queues
- Manage Assets
----------------------------------------------
Queue and Transactions:
Queue - It is a container holds unlimited number of rows.
      - When new queue is created empty by default
	  - Add Queue Item and Add Bulk Queue Item we can upload data to queue - Queue Item.
Transaction - Once the Queue iteme is processed they become transaction.
            - Post transaction we can set transation staus using "Set transaction Status" Activity.
----------------------------------------------
Difference Between Add Queue Item and Add Transaction Item?

Add Queue Item:
 - By Default priority is Normal
 - Status is by default New.
 
Add Transaction Item
 - By Default the priority is High
 - And Status is by default In-Porgress
---------------------------------------------

End to End Setup from Scratch:
----------------------------------

1.Login to Orchestrator using google or outlook account-  https://cloud.uipath.com/ -- This login is decided by Admin -> Accounts and Groups -> Authentcation Setting.
2.Default tentent Will be created initially after 2021 release Else New tentent should be created and service should be assigned to the tentent.
3.Create Machine in Orchestrator.
4.Create Robot in Orchestrator.
5.Create process asset and queue

------------------------------------------
1.How to do performer without using Orchestrator?
2.How to schedule the robot without using orchestrator?
3.Print only Vowels in the string?
4.About AI Faberic?
5.Database activities?
6.It is possible to use excel as a database?
7.How to story excel data to datatable?

--------------------------------------------------------------------------
Steps For End to End Setup:

1.Create Tenants
2.Account and Group
-----------------------------------------
Different Service Available in UIPath Cloud.

1.Orchestrator
2.Actions
3.Processor Launcher
4.Test Manager
5.Intergration Service
6.Data Service
7.Document Understanding
------------------------------------------
Group Membership:

1.Everyone
2.Automation User
3.Administrators
4.Automation Developer

-------------------------------------------
Modern Design:

Machine
Robot
Roles
Folder
 - User Create 
 - Role Assign
 - Machine Add

-------------------------

256 bit AES(Assync)encryption Schema
----------------------------------------------------


Amex Corporate Travel Domain
Fidelity Investment banking
Maveric Commercial banking
Infosys - Ecommerce


Uipath Foundation Associate
Uipath Advance Certificate
Internal Certifired


*********************************************************

Global Exception handler:

Default Argument  - 

errorInfo  - ExceptionHandlerArgs
result     - ErrorAction


Action to be taken after the Global Exception Handler steps in: 

Continue - The exception is re-thrown.

Ignore - The exception is ignored, and the execution continues from the next activity.

Retry - The activity which threw the exception is retried.

Abort - The execution stops after running the current handler.

---------------------------------------------------------                                                                                                                                               
Selenium        - Web UI Automation
Requests        - API Automation
Pywin32         - Outlook Automation
NiPy            - Nifi Automation
Pandas          -
Numpy           -
matplotlib      -








































